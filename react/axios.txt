NOTE: See Javascript/promises for more info on .then() and .catch() statements

Fetch
This is what Axios is replacing


Example: AJAX GET call inside component
componentDidMount() {
    fetch('https://dog.ceo/api/breed/husky/images')
      .then(res => res.json())
      .then(dogs => console.log(dogs.message)) //fetched data is now in dogs
      .catch(err => console.log(err))
}
Returned Data:
Object {status: "success", message: Array[195]}
1.  status: "success"
2. ▶message: Array[195]


Axios
Installing
npm install axios or yarn add axios
Importing
import axios from 'axios'


POST Requests
Example:
postMessage = quote =>
    axios
      .post("https://lambda-school-test-apis.herokuapp.com/quotes", quote)
      .then(res => console.log(res))
      .catch(err => console.log(err))
Returned Data: (successful post)
Object {data: Object, status: 200, statusText: "OK", headers: Object, config: Object…}
1. ▶data: Object
    1.  successMessage: "You POSTED!!! And it was awesome when Airtable said "still loading" in LambdaFroms: Revenge of the Airtable!"
    2. ▶requestBody: Object
2.  status: 200
3.  statusText: "OK"
4. ▶headers: Object
5. ▶config: Object
6. ▶request: XMLHttpRequest
Returned Data: (failed post)
POST https://lambda-school-test-apis.herokuapp.com/quotes 422 (Unprocessable Entity)
index.js? [sm]:36 Error: Request failed with status code 422
    at createError (createError.js:16)
    at settle (settle.js:18)
    at XMLHttpRequest.handleLoad (xhr.js:77)
Network Headers: (successful post)
Request URL: https://lambda-school-test-apis.herokuapp.com/quotes
Request Method: POST
Status Code: 200 OK
Remote Address: 35.170.227.83:443
Referrer Policy: no-referrer-when-downgrade
Network Headers: (failed post)
Request URL: https://lambda-school-test-apis.herokuapp.com/quotes
Request Method: POST
Status Code: 422 Unprocessable Entity
Remote Address: 34.204.124.79:443
Referrer Policy: no-referrer-when-downgrade


GET Requests
Example:
componentDidMount() {
    axios
      .get('https://dog.ceo/api/breed/husky/images')
      .then(dogs => console.log(dogs.data.message))
      .catch(err => console.log(err))
}
Returned Data:
Object {data: Object, status: 200, statusText: "", headers: Object, config: Object…}
1. ▶data: Object
    1.  status: "success"
    2. ▶message: Array[195]
2.  status: 200
3.  statusText: ""
4. ▶headers: Object
    1.  content-type: "application/json"
    2.  cache-control: "no-cache, private"
5. ▶config: Object
6. ▶request: XMLHttpRequest
    1. ▶<constructor>: "XMLHttpRequest"
Network Headers: (successful get)
Request URL: https://017r786jk0.codesandbox.io/sandbox-service-worker.js
Request Method: GET
Status Code: 200 
Remote Address: 35.227.224.97:443
Referrer Policy: no-referrer-when-downgrade


PUT Requests
Example:
putMessage = (id, updatedQuote) =>
    axios
      .put(`https://lambda-school-test-apis.herokuapp.com/quotes/${id}`, updatedQuote)
      .then(res => console.log(res))
      .catch(err => console.log(err))
Returned Data: (successful put)
Object {data: Object, status: 200, statusText: "OK", headers: Object, config: Object…}
1. ▶data: Object
    1.  successMessage: "You PUTED!!! Thanks for correcting that quote! That was a close one..."
    2. ▶requestBody: Object
    3.  quoteId: "42"
2.  status: 200
3.  statusText: "OK"
4. ▶headers: Object
5. ▶config: Object
6. ▶request: XMLHttpRequest
Network Headers: (successful put)
Request URL: https://lambda-school-test-apis.herokuapp.com/quotes/42
Request Method: PUT
Status Code: 200 OK
Remote Address: 34.206.39.216:443
Referrer Policy: no-referrer-when-downgrade


DELETE Requests
Example:
deleteMessage = id =>
    axios
      .delete(`https://lambda-school-test-apis.herokuapp.com/quotes/${id}`)
      .then(res => console.log(res))
      .catch(err => console.log(err));
Returned Data: (successful delete) 
1. Object {data: Object, status: 200, statusText: "OK", headers: Object, config: Object…}
2. ▶data: Object
    1.  successMessage: "You DELETED!!! Now that quote is gone from the interwebs... never to be found again."
    2.  quoteId: "314159"
3.  status: 200
4.  statusText: "OK"
5. ▶headers: Object
6. ▶config: Object
7. ▶request: XMLHttpRequest
Network Headers:  (successful delete)
Request URL: https://lambda-school-test-apis.herokuapp.com/quotes/314159
Request Method: DELETE
Status Code: 200 OK
Remote Address: 34.206.39.216:443
Referrer Policy: no-referrer-when-downgrade